close all;
clear;
clc;
warning('OFF', 'ALL')

%% Add the path to $ROOTDIR/breach-dev, better to be absolute
addpath('../breach-dev')
        
InitBreach
model_name = 'NN';

%rng(15000,'twister');


BrSD = BreachSimulinkSystem(model_name);
%, 'all', [], {}, [], 'Verbose',0,'SimInModelsDataFolder', true); 

nbSig=10;

% We assume that the input wors are in files named s_01, s_02...
for sigId = 1:nbSig
    if (sigId < 10)
        sigfilename = strcat('s_0', num2str(sigId));
    else
        sigfilename = strcat('s_', num2str(sigId));
    end
    
    In1 = load(sigfilename, '-ascii');
    timeSim = In1(:,1);
    timeSim= timeSim-timeSim(1);
    sg_in = from_workspace_signal_gen({'In1'});
    
% We can even define an STL formula,
% phi = STL_Formula('bounded', 'alw_[0, 10] (Out1[t] < 0.1)'); 
     
    BrSD_temp=BrSD.copy();
    BrSD_temp.SetInputGen({sg_in});
    BrSD_temp.Sim(timeSim);
    BrSD_temp.PlotSignals({'In1', 'Out1'});
     
%     rob = BrSD_temp.CheckSpec(phi);
%     if rob<0 
%        disp('Falsified the Property');
%        BrSD.PlotSignals;
%        return;
%     end


end

SimLog=BrSD.BrSet_Logged;


Traces=SimLog.P.traj;
nbTrace = length(Traces)
fprintf('Total number of traces: %i.\n\n',nbTrace);
% should be nb of input signals


%get the index of the ouput signal in the Log
index_output=[];
output_name='Out1';
index_output=[index_output;find(strcmp(SimLog.P.ParamList,...
                                     output_name))];
output_words=[];
for i=1:nbTrace
  word=[ SimLog.P.traj{1}.time'...
                SimLog.P.traj{1}.X(index_output,:)' ];
            
  output_words = [output_words word]
end



    
               
